1、先将原数组排序，在与相邻的进行比较，如果不同则存入新数组。
  function unique2(arr) {
            var formArr = arr.sort()
            var newArr=[formArr[0]]
            for (let i = 1; i < formArr.length; i++) {
                if (formArr[i]!=formArr[i-1]) {
                    newArr.push(formArr[i])
                }
            }
            return newArr
        }
    console.log(unique2([1, 1, 2, 3, 5, 3, 1, 5, 6, 7, 4]));
2、利用数组的indexOf下标属性来查询，如果在数组中没找到指定元素则返回 -1。
  function unique4(arr) {
            var newArr = []
            for (var i = 0; i < arr.length; i++) {
                if (newArr.indexOf(arr[i])===-1) {
                    newArr.push(arr[i])
                }
            }
            return newArr
        }
    console.log(unique4([1, 1, 2, 3, 5, 3, 1, 5, 6, 7, 4]));
3、--------------------
    对象属性去重：
var arr = [
  {
    key: '01',
    value: '乐乐'
  },
  {
    key: '02',
    value: '博博'
   }, 
  {
    key: '03',
    value: '淘淘'
  },
  {
    key: '04',
    value: '哈哈'
  },
  {
    key: '01',
    value: '乐乐'
    }];
------方法：利用对象访问属性的方法，判断对象中是否存在key。
----------------------
 var result = [];
    var obj = {};
    for(var i =0; i<arr.length; i++){
       if(!obj[arr[i].key]){
          result.push(arr[i]);
          obj[arr[i].key] = true;
       }
    }
    console.log(result); 